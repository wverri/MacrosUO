// Paste your code here :)
function attackClosestRail() {
    Orion.IgnoreReset();
    Orion.Ignore(self);

    var route = [
        { x: 1740, y: 1191 },
        { x: 1751, y: 1183 },
        { x: 1760, y: 1170 },
        { x: 1765, y: 1158 },
        { x: 1771, y: 1143 },
        { x: 1768, y: 1130 },
        { x: 1770, y: 1117 },
        { x: 1770, y: 1106 },
        { x: 1766, y: 1094 },
        { x: 1766, y: 1079 },
        { x: 1766, y: 1067 },
        { x: 1766, y: 1055 },
        { x: 1766, y: 1044 },
        { x: 1757, y: 1034 },
        { x: 1755, y: 1025 },
        { x: 1744, y: 1021 },
        { x: 1754, y: 1011 },
        { x: 1748, y: 1001 },
        { x: 1737, y: 996 },
        { x: 1727, y: 994 },
        { x: 1740, y: 973 },
        { x: 1743, y: 956 },
        { x: 1737, y: 942 },
        { x: 1732, y: 926 },
        { x: 1721, y: 910 },
        { x: 1709, y: 898 },
        { x: 1705, y: 886 },
        { x: 1702, y: 866 },
        { x: 1712, y: 889 },
        { x: 1724, y: 911 },
        { x: 1734, y: 930 },
        { x: 1741, y: 949 },
        { x: 1742, y: 966 },
        { x: 1742, y: 982 },
        { x: 1733, y: 1004 },
        { x: 1745, y: 1018 },
        { x: 1745, y: 1032 },
        { x: 1759, y: 1046 },
        { x: 1763, y: 1065 },
        { x: 1767, y: 1087 },
        { x: 1767, y: 1102 },
        { x: 1767, y: 1112 },
        { x: 1770, y: 1130 },
        { x: 1768, y: 1150 },
        { x: 1765, y: 1170 },
        { x: 1759, y: 1187 },
        { x: 1744, y: 1191 },
        { x: 1726, y: 1191 }
    ];
    var currentRouteIndex = 0;

    while (true) {
        if (Player.Dead()) {
            // Se o personagem estiver morto ou como fantasma, execute a função de ressurreição
            Ress();
            Orion.Wait(180000); // Aguarde 3 minutos até ressuscitar
            continue; // Pule para a próxima iteração do loop
        }

		var enemy = Orion.FindType("any", "-1", "ground", "mobile | near | ignorefriends", "20", "gray | criminal | enemy | red", "!0x0190 & !0x0191");
        var obj = Orion.FindObject(enemy);
        Orion.Wait(50);

        if (obj != null) {
        	Orion.Attack(enemy);
            while (obj.Exists()) {
                if (Orion.GetDistance(obj) > 1) {
                    Orion.WalkTo(obj.X(), obj.Y(), obj.Z(), 1);
                    Orion.Attack(enemy);
                } else {
                    Orion.Attack(enemy);
                }
            }
        } else {
            // Se não houver inimigos próximos, ande até a próxima coordenada da rota
            var nextCoord = route[currentRouteIndex];
            Orion.WalkTo(nextCoord.x, nextCoord.y, 0, 0);

            // Avance para a próxima coordenada da rota (ciclo)
            currentRouteIndex = (currentRouteIndex + 1) % route.length;
        }
    }
}

function Ress() {
    Orion.HelpGump();
    if (Orion.WaitForGump(1000)) {
        var gump0 = Orion.GetGump('last');
        if ((gump0 !== null) && (!gump0.Replayed()) && (gump0.ID() === '0x0000040E')) {
            gump0.Select(Orion.CreateGumpHook(2));
            Orion.Wait(100);
        }
    }
}
